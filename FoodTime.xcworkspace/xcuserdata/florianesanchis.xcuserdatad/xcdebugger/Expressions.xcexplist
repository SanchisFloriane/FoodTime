<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "UILabels.localizeWithoutComment(key:):UILabels.swift">
         <PersistentStrings>
            <PersistentString
               value = "NSLocalizedString(key, comment: &quot;&quot;)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EmailLoginViewController.setupView():EmailLoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UILabels().localizeWithoutComment(key: UILabels().EmailTitle)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in LoginViewController.userExist(email:):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "email">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChoicePlaceViewController.checkEnabledContinuebutton():ChoicePlaceViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "placeSelected">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in LoginViewController.loginButton(_:didCompleteWith:error:):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Auth.auth().currentUser?.email">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in closure #1 in LoginViewController.saveUserIntoFirebaseDatabase():LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Service.HomeViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in LoginViewController.userExists():LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "snapchot.childrenCount">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in LoginViewController.userExists(uid:):LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "snapchot.children">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CreateUserAccountViewController.userExists():CreateUserAccountViewController.swift">
      </ContextState>
      <ContextState
         contextName = "EmailLoginViewController.clearTextView():EmailLoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UILabels().localizeWithoutComment(key: UILabels().EmailTitle)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "main:AppDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "parentPageViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.uploadData():LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.currentUser!.profilePicture">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "HomeViewController.viewWillAppear(_:):HomeViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "navigationItem.hidesBackButton">
            </PersistentString>
            <PersistentString
               value = "self.navigationController?.toolbarItems">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.userExists():LoginViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "Auth.auth().currentUser!.uid">
            </PersistentString>
            <PersistentString
               value = "self.newUser">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChoicePlaceViewController.selectPlace(_:):ChoicePlaceViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "sender.layer.borderColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChoicePlaceViewController.nextPage():ChoicePlaceViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "parentPageViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "closure #1 in CreateUserAccountViewController.createUserAccount():CreateUserAccountViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.isExists">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginViewController.loginButton(_:didCompleteWith:error:):LoginViewController.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
